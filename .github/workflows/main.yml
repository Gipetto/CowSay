# This is a basic workflow to help you get started with Actions

name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-legacy:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ["ubuntu-18.04"]
        php-versions: ["7.2","7.3"]
        php-unit-versions: ["8.5.9"]
    name: LEGACY PHP ${{ matrix.php-versions }} test on ${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit:${{ matrix.phpunit-versions }}
      - name: Composer Install
        run: composer install
      - name: Run Tests
        run: make test
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ["ubuntu-latest"]
        php-versions: ["7.4", "8.0"]
        php-unit-versions: ["latest"]
        unstable: [false]
        include:
          - php-versions: "8.1"
            operating-system: "ubuntu-latest"
            unstable: true
    continue-on-error: ${{ matrix.unstable }}
    name: CURRENT PHP ${{ matrix.php-versions }} test on ${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit:${{ matrix.phpunit-versions }}
      - name: Composer Install
        run: composer install
      - name: Run Tests
        run: make test
  # Final step to wrap up a singular protected branch action
  test-all-required:
    runs-on: ubuntu-latest
    needs: ["test-legacy", "test"]
    steps:
      - run: echo "Done!"
    
